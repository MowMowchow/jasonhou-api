{
  "service": {
    "service": "jasonhou",
    "serviceObject": {
      "name": "jasonhou"
    },
    "provider": {
      "name": "aws",
      "runtime": "go1.x",
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "HandleNowPlayingLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/jasonhou-dev-handleNowPlaying"
            }
          },
          "HandleGetBoardLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/jasonhou-dev-handleGetBoard"
            }
          },
          "HandleNowPlayingLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/jasonhou/dev/1674098227054-2023-01-19T03:17:07.054Z/handleNowPlaying.zip"
              },
              "Handler": "bin/handleNowPlaying",
              "Runtime": "go1.x",
              "FunctionName": "jasonhou-dev-handleNowPlaying",
              "MemorySize": 1024,
              "Timeout": 10,
              "Environment": {
                "Variables": {
                  "SPOTIFY_CLIENT_ID": "{{resolve:secretsmanager:dev/jasonhou/spotifyCredentials:SecretString:SPOTIFY_CLIENT_ID}}",
                  "SPOTIFY_CLIENT_SECRET": "{{resolve:secretsmanager:dev/jasonhou/spotifyCredentials:SecretString:SPOTIFY_CLIENT_SECRET}}",
                  "SPOTIFY_REFRESH_TOKEN": "{{resolve:secretsmanager:dev/jasonhou/spotifyCredentials:SecretString:SPOTIFY_REFRESH_TOKEN}}"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "HandleNowPlayingLambdaRole",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "HandleNowPlayingLogGroup",
              "HandleNowPlayingLambdaRole"
            ]
          },
          "HandleGetBoardLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/jasonhou/dev/1674098227054-2023-01-19T03:17:07.054Z/handleGetBoard.zip"
              },
              "Handler": "bin/handleGetBoard",
              "Runtime": "go1.x",
              "FunctionName": "jasonhou-dev-handleGetBoard",
              "MemorySize": 1024,
              "Timeout": 10,
              "Role": {
                "Fn::GetAtt": [
                  "HandleGetBoardLambdaRole",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "HandleGetBoardLogGroup",
              "HandleGetBoardLambdaRole"
            ]
          },
          "HandleNowPlayingLambdaVersionnpnnkPnRyJQELfMa9FI4o6QwQv0JsDCYjz2gptQjus": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HandleNowPlayingLambdaFunction"
              },
              "CodeSha256": "3cDBKxonRy6Nco8P4HeaAOmycfbB2VeTSsvLwvcUNLE="
            }
          },
          "HandleGetBoardLambdaVersionGIdzti9ZkczrFQPrwKKiVe49W6lpU1M44FTDlUMyzZw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HandleGetBoardLambdaFunction"
              },
              "CodeSha256": "3cDBKxonRy6Nco8P4HeaAOmycfbB2VeTSsvLwvcUNLE="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-jasonhou",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "HandleNowPlayingLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HandleNowPlayingLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationHandleNowPlaying": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"HandleNowPlayingLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 10500
            }
          },
          "HttpApiRouteGetGetcurrenttrack": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /getCurrentTrack",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationHandleNowPlaying"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationHandleNowPlaying"
          },
          "HandleGetBoardLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HandleGetBoardLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationHandleGetBoard": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"HandleGetBoardLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 10500
            }
          },
          "HttpApiRouteGetGetboardBoardsizeVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /getBoard/{boardSize}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationHandleGetBoard"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationHandleGetBoard"
          },
          "HandleNowPlayingLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "HandleNowPlayingLambdaLogPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogGroup",
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          "*"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "HandleGetBoardLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "HandleGetBoardLambdaLogPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogGroup",
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          "*"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-jasonhou-dev-ServerlessDeploymentBucketName"
            }
          },
          "HandleNowPlayingLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HandleNowPlayingLambdaVersionnpnnkPnRyJQELfMa9FI4o6QwQv0JsDCYjz2gptQjus"
            },
            "Export": {
              "Name": "sls-jasonhou-dev-HandleNowPlayingLambdaFunctionQualifiedArn"
            }
          },
          "HandleGetBoardLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HandleGetBoardLambdaVersionGIdzti9ZkczrFQPrwKKiVe49W6lpU1M44FTDlUMyzZw"
            },
            "Export": {
              "Name": "sls-jasonhou-dev-HandleGetBoardLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-jasonhou-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-jasonhou-dev-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "customDomain": {
        "domainName": "api.jasonhou.ca",
        "stage": "dev",
        "basePath": "api",
        "certificateName": "api.jasonhou.ca",
        "createRoute52Record": true
      }
    },
    "pluginsData": {},
    "functions": {
      "handleNowPlaying": {
        "handler": "bin/handleNowPlaying",
        "runtime": "go1.x",
        "timeout": 10,
        "package": {
          "patterns": [
            "!./*",
            "bin/handleNowPlaying"
          ],
          "artifact": "/Users/jhou/Documents/github/jasonhou-api/.serverless/handleNowPlaying.zip"
        },
        "events": [
          {
            "httpApi": {
              "method": "GET",
              "path": "/getCurrentTrack"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/getCurrentTrack"
          }
        ],
        "environment": {
          "SPOTIFY_CLIENT_ID": "{{resolve:secretsmanager:dev/jasonhou/spotifyCredentials:SecretString:SPOTIFY_CLIENT_ID}}",
          "SPOTIFY_CLIENT_SECRET": "{{resolve:secretsmanager:dev/jasonhou/spotifyCredentials:SecretString:SPOTIFY_CLIENT_SECRET}}",
          "SPOTIFY_REFRESH_TOKEN": "{{resolve:secretsmanager:dev/jasonhou/spotifyCredentials:SecretString:SPOTIFY_REFRESH_TOKEN}}"
        },
        "role": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"HandleNowPlayingLambdaFunction\"][\"Properties\"][\"Role\"]"
        },
        "name": "jasonhou-dev-handleNowPlaying",
        "memory": 1024,
        "vpc": {},
        "versionLogicalId": "HandleNowPlayingLambdaVersionnpnnkPnRyJQELfMa9FI4o6QwQv0JsDCYjz2gptQjus"
      },
      "handleGetBoard": {
        "handler": "bin/handleGetBoard",
        "runtime": "go1.x",
        "timeout": 10,
        "package": {
          "patterns": [
            "!./*",
            "bin/handleGetBoard"
          ],
          "artifact": "/Users/jhou/Documents/github/jasonhou-api/.serverless/handleGetBoard.zip"
        },
        "events": [
          {
            "httpApi": {
              "method": "GET",
              "path": "/getBoard/{boardSize}"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/getBoard/{boardSize}"
          }
        ],
        "role": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"HandleGetBoardLambdaFunction\"][\"Properties\"][\"Role\"]"
        },
        "name": "jasonhou-dev-handleGetBoard",
        "memory": 1024,
        "vpc": {},
        "versionLogicalId": "HandleGetBoardLambdaVersionGIdzti9ZkczrFQPrwKKiVe49W6lpU1M44FTDlUMyzZw"
      }
    },
    "resources": {
      "Resources": {
        "HandleNowPlayingLambdaRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": "HandleNowPlayingLambdaLogPolicy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream",
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        "*"
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        "HandleGetBoardLambdaRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": "HandleGetBoardLambdaLogPolicy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream",
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        "*"
                      ]
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "error",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "package": {
        "individually": true,
        "exclude": [
          "node_modules/**",
          "venv/**"
        ],
        "artifactDirectoryName": "serverless/jasonhou/dev/1674098227054-2023-01-19T03:17:07.054Z"
      },
      "configValidationMode": "error",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/jasonhou/dev/1674098227054-2023-01-19T03:17:07.054Z",
    "artifact": ""
  }
}